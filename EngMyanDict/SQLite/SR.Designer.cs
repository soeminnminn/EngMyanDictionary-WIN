//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EngMyanDict.SQLite {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SR {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SR() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EngMyanDict.SQLite.SR", typeof(SR).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SQLite library is already loaded. UseWinSqlite3 must be called before using SQLite..
        /// </summary>
        internal static string AlreadyLoaded {
            get {
                return ResourceManager.GetString("AlreadyLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot bind the value for parameter &apos;{parameterName}&apos; because multiple matching parameters were found in the command text. Specify the parameter name with the symbol prefix, e.g. &apos;@{parameterName}&apos;..
        /// </summary>
        internal static string AmbiguousParameterName {
            get {
                return ResourceManager.GetString("AmbiguousParameterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {methodName} can only be called when the connection is open..
        /// </summary>
        internal static string CallRequiresOpenConnection {
            get {
                return ResourceManager.GetString("CallRequiresOpenConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CommandText must be set before {methodName} can be called..
        /// </summary>
        internal static string CallRequiresSetCommandText {
            get {
                return ResourceManager.GetString("CallRequiresSetCommandText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot store &apos;NaN&apos; values..
        /// </summary>
        internal static string CannotStoreNaN {
            get {
                return ResourceManager.GetString("CannotStoreNaN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConnectionString cannot be set when the connection is open..
        /// </summary>
        internal static string ConnectionStringRequiresClosedConnection {
            get {
                return ResourceManager.GetString("ConnectionStringRequiresClosedConnection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot convert object of type &apos;{sourceType}&apos; to object of type &apos;{targetType}&apos;..
        /// </summary>
        internal static string ConvertFailed {
            get {
                return ResourceManager.GetString("ConvertFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid attempt to call {operation} when reader is closed..
        /// </summary>
        internal static string DataReaderClosed {
            get {
                return ResourceManager.GetString("DataReaderClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An open reader is already associated with this command. Close it before opening a new one..
        /// </summary>
        internal static string DataReaderOpen {
            get {
                return ResourceManager.GetString("DataReaderOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For more information on this error code see http://sqlite.org/rescode.html.
        /// </summary>
        internal static string DefaultNativeError {
            get {
                return ResourceManager.GetString("DefaultNativeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cache mode &apos;{mode}&apos; is invalid..
        /// </summary>
        internal static string InvalidCacheMode {
            get {
                return ResourceManager.GetString("InvalidCacheMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CommandBehavior &apos;{behavior}&apos; is invalid..
        /// </summary>
        internal static string InvalidCommandBehavior {
            get {
                return ResourceManager.GetString("InvalidCommandBehavior", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The CommandType &apos;{commandType}&apos; is invalid..
        /// </summary>
        internal static string InvalidCommandType {
            get {
                return ResourceManager.GetString("InvalidCommandType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {enumType} enumeration value, {value}, is invalid..
        /// </summary>
        internal static string InvalidEnumValue {
            get {
                return ResourceManager.GetString("InvalidEnumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IsolationLevel &apos;{isolationLevel}&apos; is invalid..
        /// </summary>
        internal static string InvalidIsolationLevel {
            get {
                return ResourceManager.GetString("InvalidIsolationLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ParameterDirection &apos;{direction}&apos; is invalid..
        /// </summary>
        internal static string InvalidParameterDirection {
            get {
                return ResourceManager.GetString("InvalidParameterDirection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keyword not supported: &apos;{keyword}&apos;..
        /// </summary>
        internal static string KeywordNotSupported {
            get {
                return ResourceManager.GetString("KeywordNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must add values for the following parameters: {parameters}.
        /// </summary>
        internal static string MissingParameters {
            get {
                return ResourceManager.GetString("MissingParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No data exists for the row/column..
        /// </summary>
        internal static string NoData {
            get {
                return ResourceManager.GetString("NoData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ConnectionString must be set before Open can be called..
        /// </summary>
        internal static string OpenRequiresSetConnectionString {
            get {
                return ResourceManager.GetString("OpenRequiresSetConnectionString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SqliteConnection does not support nested transactions..
        /// </summary>
        internal static string ParallelTransactionsNotSupported {
            get {
                return ResourceManager.GetString("ParallelTransactionsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A SqliteParameter with ParameterName &apos;{parameterName}&apos; is not contained by this SqliteParameterCollection..
        /// </summary>
        internal static string ParameterNotFound {
            get {
                return ResourceManager.GetString("ParameterNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {propertyName} must be set..
        /// </summary>
        internal static string RequiresSet {
            get {
                return ResourceManager.GetString("RequiresSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An open reader is associated with this command. Close it before changing the {propertyName} property..
        /// </summary>
        internal static string SetRequiresNoOpenReader {
            get {
                return ResourceManager.GetString("SetRequiresNoOpenReader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SQLite Error {errorCode}: &apos;{message}&apos;..
        /// </summary>
        internal static string SqliteNativeError {
            get {
                return ResourceManager.GetString("SqliteNativeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This SqliteTransaction has completed; it is no longer usable..
        /// </summary>
        internal static string TransactionCompleted {
            get {
                return ResourceManager.GetString("TransactionCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The transaction object is not associated with the connection object..
        /// </summary>
        internal static string TransactionConnectionMismatch {
            get {
                return ResourceManager.GetString("TransactionConnectionMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execute requires the command to have a transaction object when the connection assigned to the command is in a pending local transaction.  The Transaction property of the command has not been initialized..
        /// </summary>
        internal static string TransactionRequired {
            get {
                return ResourceManager.GetString("TransactionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No mapping exists from object type {typeName} to a known managed provider native type..
        /// </summary>
        internal static string UnknownDataType {
            get {
                return ResourceManager.GetString("UnknownDataType", resourceCulture);
            }
        }
    }
}
